{"version":3,"sources":["components/cardComponent/Card.jsx","components/cardList/Card-list.component.jsx","components/searchBox/Search-Box.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","res","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAIaA,EAAO,SAACC,GACjB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BAAoEC,IAAI,YAChF,6BAAKL,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,YCLjBC,G,MAAW,SAACR,GACrB,IAAQS,EAAaT,EAAbS,SACR,OACI,qBAAKR,UAAU,YAAf,SAEIQ,EAASC,KAAI,SAAAP,GAAO,OAChB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,W,YCGpBO,MAVf,YAAmD,IAA9BC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,aAChC,OACE,uBACAZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,KCoCCG,E,kDAvCb,aAAc,IAAD,8BACX,gBASFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,YAAYF,EAAEG,OAAOC,SARrC,EAAKC,MAAQ,CACXb,SAAS,GACTU,YAAY,IALH,E,qDAcb,WAAoB,IAAD,OACjBI,MAAM,8CACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAET,SAAUkB,S,oBAG7C,WACE,MAAiCC,KAAKN,MAA9Bb,EAAR,EAAQA,SAASU,EAAjB,EAAiBA,YACXU,EAAmBpB,EAASqB,QAAO,SAAA3B,GAAO,OAC9CA,EAAQG,KAAKyB,cAAcC,SAASb,EAAYY,kBAElD,OACE,sBAAK9B,UAAU,MAAf,UACA,kDACA,cAAC,EAAD,CACAW,YAAY,kBACZC,aAAce,KAAKf,eAEnB,cAAC,EAAD,CAAUJ,SAAUoB,W,GAjCRI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.91f550df.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './card.css'\r\n\r\n\r\nexport const Card = (props) => {\r\n    return(\r\n        <div className=\"card-container\">\r\n            <img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} alt=\"monster\" />\r\n            <h2>{props.monster.name}</h2>\r\n            <p>{props.monster.email}</p>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { Card } from '../cardComponent/Card'\r\nimport './Card-list.style.css'\r\n\r\nexport const CardList = (props) =>{\r\n    const { monsters } = props\r\n    return(\r\n        <div className=\"card-list\">\r\n        {\r\n            monsters.map(monster => (\r\n                <Card key={monster.id} monster={monster}/>\r\n            ))}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './search-box.style.css'\r\n\r\nfunction SearchBox({ placeholder, handleChange }) {\r\n  return (\r\n    <input \r\n    className='search'\r\n    type='search' \r\n    placeholder={placeholder}\r\n    onChange={handleChange}/>\r\n  )\r\n}\r\n\r\nexport default SearchBox;\r\n","import { Component } from 'react';\nimport { CardList } from './components/cardList/Card-list.component';\nimport './App.css';\nimport SearchBox from './components/searchBox/Search-Box';\n\nclass App extends Component{\n  constructor(){\n    super();\n    \n    this.state = {\n      monsters:[],\n      searchField:''\n    };\n\n  }\n\n  handleChange = (e) => {\n    this.setState({ searchField:e.target.value })\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(res => res.json())\n      .then(users => this.setState({ monsters: users}))\n  }\n\n  render(){\n    const { monsters,searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster => \n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n      )\n    return (\n      <div className=\"App\">\n      <h1>Monsters Rolodex</h1>\n      <SearchBox \n      placeholder='Search Monsters'\n      handleChange={this.handleChange}\n      />\n      <CardList monsters={filteredMonsters}/>\n      \n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}